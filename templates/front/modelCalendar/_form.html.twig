<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                {{ form_start(form) }}
                <div class="row px-5 py-4">
                    <h2 class="mb-5 calendar-title">Informations</h2>
                    <div class="col-8">
                        <div class="row">
                            <div class="mb-3 col-md-6">
                                {{ form_label(form.title, null, { 'label_attr': {'class': 'form-label'} }) }}
                                {{ form_widget(form.title, { 'attr': {'class': 'form-control'} }) }}
                                <div class="text-danger">
                                    {{ form_errors(form.title) }}
                                </div>
                            </div>
                            <div class="mb-3 col-md-6">
                                {{ form_label(form.color, null, { 'label_attr': {'class': 'form-label'} }) }}
                                <div class="colorpicker"></div>
                                <br/>
                                {{ form_widget(form.color, { 'attr': {'class': 'colorpicker'} }) }}
                                <div class="text-danger">
                                    {{ form_errors(form.color) }}
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="mb-3 col-12">
                                {% set isRequiredFile = false %}
                                {% if model.path == null %}
                                    {% set isRequiredFile = true %}
                                {% endif %}

                                {{ form_label(form.file, null, { 'label_attr': {'class': 'form-label'} }) }}
                                {{ form_widget(form.file, { 'attr': {'class': 'form-control upload-img', 'data-preview-target': '#preview', 'data-cropped-target': '#cropped-file', 'data-cropper-width': '130', 'data-cropper-height': '175'}, required: isRequiredFile }) }}
                                <div class="text-danger">
                                    {{ form_errors(form.file) }}
                                </div>
                            </div>
                            <input id="cropped-file" name="cropped-file" type="hidden">
                            <div class="mb-3 col-12 d-flex flex-column">
                                {% if null == model.path %}
                                    <img id="preview" alt="{{ model.title }}" src="https://via.placeholder.com/130x175" class="thumbnail img-responsive mt-2" width="130" height="175">
                                {% else %}
                                    <img id="preview" alt="{{ model.title }}" src="{{ asset(model.path) }}" class="thumbnail img-responsive mt-2" width="130" height="175">
                                {% endif %}
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <button type="submit" class="btn btn-primary my-2 w-100">Valider</button>
                    </div>
                </div>
                <hr/>
                <div class="row align-items-center px-5 py-4">
                    <div class="col-xxl-5 ps-0">
                        <div class="calendar-view mx-auto">
                            <h2 class="my-3 calendar-title">Gestion des cases</h2>
                            <div class="calendar-container">
                                <div id="calendar" class="calendar" style="background-image: url('{{ asset(model.path) }}')">
                                    {% for modelBox in model.modelBoxes|sort((a, b) => a.position <=> b.position) %}
                                        <div class="model-box" data-id="{{ modelBox.id }}" style="left: {{ modelBox.coordX }}%; top: {{ modelBox.coordY }}%;">
                                            <div class="model-box-number">
                                                {{ modelBox.position + 1 }}
                                            </div>
                                        </div>
                                    {% endfor %}
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-xxl-7 px-5 mt-5 mt-xxl-0">
                        <div class="d-flex">
                            <div id="boxes">
                                {% form_theme form.modelBoxes
                                    'calendar/model_calendar/modelBox-theme.html.twig'
                                    'utils/jquery.collection.html.twig'
                                %}
                                {{ form_widget(form.modelBoxes) }}
                            </div>
                        </div>
                    </div>
                    <button type="submit" class="btn btn-primary mt-5 w-100">Valider</button>
                </div>

                {{ form_end(form) }}
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="previewModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered .modal-xl">
        <div class="modal-content">
            <div class="modal-header border-0">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <div class="spinner-grow" role="status"></div>
                <div class="spinner-grow" role="status"></div>
                <div class="spinner-grow" role="status"></div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        let upload = new Upload();
        upload.uploadAndCropPreview({
            input: ".upload-img",
        });

        const pickr = Pickr.create({
            el: '.colorpicker',
            theme: 'monolith',
            default: '{{ model.color }}',
            comparison: true,
            components: {
                preview: true,
                opacity: true,
                hue: true,
            }
        });

        let colorInput = document.querySelector('#front_model_calendar_color');

        pickr.on("change", (color, instance) => {
            colorInput.value = color.toHEXA().toString();
            pickr.setColor(color.toHEXA().toString());
        });
    });
</script>

<style>
    .calendar::after{
        position: absolute;
        content: "";
        left: 100%;
        margin: auto;
        width: 10px;
        height: 100%;
        background: linear-gradient(to left, {{ model.color }}50, {{ model.color }});
        clip-path: polygon(0px 0px, 100% 6px, 100% 99%, 0px 100%);
    }
</style>